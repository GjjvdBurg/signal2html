from typing import Any
from typing import Tuple

from pure_protobuf.dataclasses_ import SERIALIZERS as SERIALIZERS
from pure_protobuf.dataclasses_ import Message as Message
from pure_protobuf.io_ import IO as IO
from pure_protobuf.serializers import MessageSerializer as MessageSerializer
from pure_protobuf.serializers import PackingSerializer as PackingSerializer
from pure_protobuf.types import int32 as int32
from pure_protobuf.types import int64 as int64
from pure_protobuf.types.google import Any_ as Any_
from pure_protobuf.types.google import Duration as Duration
from pure_protobuf.types.google import Timestamp as Timestamp

class TimestampSerializer(MessageSerializer):
    def __init__(self) -> None: ...
    def validate(self, value: Any) -> Any: ...
    def dump(self, value: Any, io: IO) -> Any: ...
    def load(self, io: IO) -> Any: ...

class DurationSerializer(MessageSerializer):
    def __init__(self) -> None: ...
    def validate(self, value: Any) -> Any: ...
    def dump(self, value: Any, io: IO) -> Any: ...
    def load(self, io: IO) -> Any: ...

class AnySerializer(MessageSerializer):
    def __init__(self) -> None: ...
    def validate(self, value: Any) -> Any: ...
    def dump(self, value: Any, io: IO) -> Any: ...
    def load(self, io: IO) -> Any: ...

def split_seconds(seconds: float) -> Tuple[int64, int32]: ...
def unsplit_seconds(seconds: int64, nanos: int32) -> float: ...
